{"title":"Wild Magic 4.0 Engine Source Code","uid":3571635,"size":24218512,"categoryP":"applications","categoryS":"windows","magnet":"?xt=urn:btih:cd38c826518b626032c17e91a4a33792f3a5aeed&amp;dn=Wild+Magic+4.0+Engine+Source+Code&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":0,"leechers":1,"uploader":"CrazyRabies","files":1,"time":1165395697,"description":"Wild Magic Vesion 4.0 includes 1,587 source files and 105 sample applications, equating to 249,860 lines of code. The Windows, Linux and Macintosh platforms are supported, using OpenGL renderers. The Windows platform also has a Direct3D renderer whose performance is comparable to that of the OpenGL renderer. Multiple versions of Microsoft\\&amp;#039;s C++ compilers are supported - versions 6, 7.0, 7.1, and 8.0 (Professional and Express Editions). The MINGW compiler and MSYS environment are also supported on the Windows platform. The Linux platform uses the g++ compiler, and the Macintosh platform uses Apple\\&amp;#039;s Xcode tools.\n\nAimed at the working Visual C++ game developer, 3D Game Engine Design provides a tour of mathematical techniques for 3-D graphics, and the source code that\\&amp;#039;s used to implement them in state-of-the-art video game engines. If you work in the game industry (or would like to), this book will serve you well, because it delivers excellent best practices for algorithms and programming techniques that\\&amp;#039;ll help your software keep up with the competition.\nThis text is a virtual encyclopedia of expertise that\\&amp;#039;s based on the author\\&amp;#039;s own work and research in the gaming industry. It provides the mathematical notation, algorithms, and C++ code (on the accompanying CD-ROM) that are needed to build fast and maintainable game engines. Early sections start with the basics, with the math that\\&amp;#039;s used to work with common 3-D objects (like spheres and boxes). Highlights include a high-powered review of quaternion algebra--in many cases, the preferred way to transform 3-D data.\n\nThe chapters on graphics pipelines explain the math that\\&amp;#039;s behind representing and rendering a 3-D world in 2-D with intervening effects like lighting and texture mapping. A variety of current algorithms are provided for representing 3-D scenes, efficient picking (which allows a programmer to determine the object in a 3-D world that has been selected), and collision detection (in which objects collide virtually). In the game software of today, curves--and not individual triangles or polygons--often are used to represent 3-D objects. Algorithms that are used to turn curves into rendered surfaces are provided, too.\n\nLater sections look at the current thinking about animation techniques for characters (including key frames, inverse kinematics, and skinning (in which digital skin is fitted over digital bone to create more realistic-looking movement)). How to represent terrain inside virtual worlds also is explained. The book closes with excellent material on such cutting-edge special effects as lens flare and projected shadows, which can add an extra level of realism to a video game. An appendix examines guidelines for designing object-oriented game software in C++.\n\nFilled with mathematical insight and expert code that puts each principle or algorithm to work, 3D Game Engine Design provides an expert view of what goes into building a state-of-the-art game engine. --Richard Dragan\n\nTopics covered: \n\nMathematical methods and sample source code for 3-D game development \nGeometrical transformations \nCoordinate systems \nQuaternions \nEuler angles \nStandard 3-D objects: spheres, oriented boxes, capsules, lozenges, cylinders, ellipsoids \nDistance methods for a variety of shapes \nIntroduction to the graphics pipeline \nModel and world coordinates \nProjecting perspective \nCamera models \nCulling techniques \nSurface and vertex attributes \nRasterizing \nEfficiency issues for clipping and lighting \nHierarchical scene representation, using trees and scene graphs \nPicking algorithms for a variety of 3-D shapes \nCollision detection for static and dynamic graphical objects \nOriented bounding-box (OBB) trees \nBasics of curves and special curves (including Bezier curves and various splines) \nCurves (generating surfaces from curves by using different techniques) \nCharacter animation, using keyframe animation and inverse kinematics \nSkinning \nGeometrical level of detail considerations \nTechniques for generating game terrain \nSpatial sorting and binary space partitioning (BSP) \nSpecial effects: lens flare, bump mapping, volumetric fogging, projected light and shadows, particle systems, morphing techniques \nC++ language features for effective object-oriented design \nReference to the numerical methods required for game mathematics\n--This text refers to the Hardcover edition. \n","torrent":{"xt":"urn:btih:cd38c826518b626032c17e91a4a33792f3a5aeed","amp;dn":"Wild+Magic+4.0+Engine+Source+Code","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"cd38c826518b626032c17e91a4a33792f3a5aeed","infoHashBuffer":{"type":"Buffer","data":[205,56,200,38,81,139,98,96,50,193,126,145,164,163,55,146,243,165,174,237]},"announce":[],"urlList":[]}}